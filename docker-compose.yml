version: '3.8'

volumes:
  minio_data:
    driver: local
  mongo_volume:
    driver: local

networks:
  my-network:
    driver: bridge

services:
  mongo:
    container_name: "MongoDB"
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongo_volume:/data/db
    networks:
      - my-network
    ports:
      - 27017:27017
    depends_on:
      - mongo-express

  mongo-express:
    container_name: "MongoExpress"
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - my-network

  minio:
    container_name: minio
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    restart: always
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - 'minio_data:/data'
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_USER}
      - MINIO_SERVER_URL=http://192.168.33.83:9000
    env_file:
      - .env
    networks:
      - my-network

  flask-app:
    build: .
    container_name: flask-app
    restart: always

    ports:
      - 5050:5000
    volumes:
      - ./:/app
    environment:
      - ENV_FOR_DYNACONF=production
    depends_on:
      - minio
    networks:
      - my-network
